{"ast":null,"code":"var _jsxFileName = \"/Users/shaylavi/Desktop/junior's place/site/src/pages/Nodejs/MySql/MySql.jsx\";\nimport React from 'react';\nimport './MySql.css';\nimport Navbar from '../../../components/Navbar/Navbar';\nimport e1 from './e1.png';\nimport e2 from './e2.png';\nimport e3 from './e3.png';\nimport e4 from './e4.png';\nimport e5 from './e5.png';\nimport e6 from './e6.png';\nimport e7 from './e7.png';\nimport e8 from './e8.png';\nimport e9 from './e9.png';\nimport e10 from './e10.png';\nimport e11 from './e10.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MySql() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"body\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"sidenav sticky-to\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/nodejs/part1\",\n          children: \"Basics part 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/nodejs/part2\",\n          children: \"Basics part 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/nodejs/mongodb\",\n          children: \"MongoDB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/nodejs/mysql\",\n          children: \"MySQL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/nodejs/firebase\",\n          children: \"FireBase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/nodejs/quizz\",\n          children: \"Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container px-9 px-lg-30\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"white-text-block\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Node.js can be used in database applications. One of the most popular databases is MySQL.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"To be able to experiment with the code examples, you should have MySQL installed on your computer. You can download a free MySQL database at \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://www.mysql.com/downloads/\",\n              children: \"https://www.mysql.com/downloads/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 159\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Once you have MySQL up and running on your computer, you can access it by using Node.js. To access a MySQL database with Node.js, you need a MySQL driver. This tutorial will use the \\\"mysql\\\" module, downloaded from NPM. To download and install the \\\"mysql\\\" module, open the Command Terminal and execute the following:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"C:\\\\Users\\\\Your Name<npm install mysql\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Now you have downloaded and installed a mysql database driver. Node.js can use this module to manipulate the MySQL database:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"var mysql = require('mysql');\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create Connection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Start by creating a connection to the database. Use the username and password from your MySQL database.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"images3\",\n            src: e1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Query a Database\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Use SQL statements to read from (or write to) a MySQL database. This is also called \\\"to query\\\" the database. The connection object created in the example above, has a method for querying the database:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"images3\",\n            src: e2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Creating a Database\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"To create a database in MySQL, use the \\\"CREATE DATABASE\\\" statement:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"images3\",\n            src: e3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Creating a Table\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"images3\",\n            src: e4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"When creating a table, you should also create a column with a unique key for each record. This can be done by defining a column as \\\"INT AUTO_INCREMENT PRIMARY KEY\\\" which will insert a unique number for each record. Starting at 1, and increased by one for each record.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"images3\",\n            src: e5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Insert Into Table\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"To fill a table in MySQL, use the \\\"INSERT INTO\\\" statement.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"images3\",\n            src: e6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"To insert more than one record, make an array containing the values, and insert a question mark in the sql, which will be replaced by the value array: INSERT INTO customers (name, address) VALUES ?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"The Result Object\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"When executing a query, a result object is returned. The result object contains information about how the query affected the table. The result object returned from the example above looks like this:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"images3\",\n            src: e7\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Get Inserted ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"For tables with an auto increment id field, you can get the id of the row you just inserted by asking the result object.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"images3\",\n            src: e8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Selecting From a Table\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"To select data from a table in MySQL, use the \\\"SELECT\\\" statement.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"images3\",\n            src: e9\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"To select only some of the columns in a table, use the \\\"SELECT\\\" statement followed by the column name. the result object is an array containing each row as an object. The third parameter of the callback function is an array containing information about each field in the result.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Select With a Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"When selecting records from a table, you can filter the selection by using the \\\"WHERE\\\" statement:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"images3\",\n            src: e10\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You can also select the records that starts, includes, or ends with a given letter or phrase. Use the '%' wildcard to represent zero, one or multiple characters:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"  con.query(\\\"SELECT * FROM customers WHERE address LIKE 'S%'\\\", function (err, result) )\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"When query values are variables provided by the user, you should escape the values. This is to prevent SQL injections, which is a common web hacking technique to destroy or misuse your database. The MySQL module has methods to escape query values:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"var sql = 'SELECT * FROM customers WHERE address = ' + mysql.escape(adr);\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You can also use a ? as a placeholder for the values you want to escape.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Sort the Result\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Use the ORDER BY statement to sort the result in ascending or descending order. The ORDER BY keyword sorts the result ascending by default. To sort the result in descending order, use the DESC keyword.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"images3\",\n            src: e11\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Use the DESC keyword to sort the result in a descending order.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        class: \"py-3 bg-dark fixed-bottom\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container px-4 px-lg-5\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"m-0 text-center text-white\",\n            children: \"Copyright \\xA9 shay lavi 2023\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n        src: \"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n        src: \"js/scripts.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n}\n_c = MySql;\nexport default MySql;\nvar _c;\n$RefreshReg$(_c, \"MySql\");","map":{"version":3,"names":["React","Navbar","e1","e2","e3","e4","e5","e6","e7","e8","e9","e10","e11","jsxDEV","_jsxDEV","MySql","children","fileName","_jsxFileName","lineNumber","columnNumber","class","href","className","src","_c","$RefreshReg$"],"sources":["/Users/shaylavi/Desktop/junior's place/site/src/pages/Nodejs/MySql/MySql.jsx"],"sourcesContent":["import React from 'react'\nimport './MySql.css'\nimport Navbar from '../../../components/Navbar/Navbar'\nimport e1 from './e1.png'\nimport e2 from './e2.png'\nimport e3 from './e3.png'\nimport e4 from './e4.png'\nimport e5 from './e5.png'\nimport e6 from './e6.png'\nimport e7 from './e7.png'\nimport e8 from './e8.png'\nimport e9 from './e9.png'\nimport e10 from './e10.png'\nimport e11 from './e10.png'\nfunction MySql() {\n  return (\n      <div>\n      <body>\n        <Navbar />\n      <div class=\"sidenav sticky-to\">\n      <a href=\"/nodejs/part1\">Basics part 1</a>\n        <a href=\"/nodejs/part2\">Basics part 2</a>\n        <a href=\"/nodejs/mongodb\">MongoDB</a>\n        <a href=\"/nodejs/mysql\">MySQL</a>\n        <a href=\"/nodejs/firebase\">FireBase</a>\n        <a href=\"/nodejs/quizz\">Quiz</a>\n      </div>\n      <div class=\"container px-9 px-lg-30\">\n            <div class=\"white-text-block\">\n              <p>Node.js can be used in database applications. One of the most popular databases is MySQL.</p>\n              <p>To be able to experiment with the code examples, you should have MySQL installed on your computer. You can download a free MySQL database at <a href='https://www.mysql.com/downloads/'>https://www.mysql.com/downloads/</a>.</p>\n              <p>Once you have MySQL up and running on your computer, you can access it by using Node.js. To access a MySQL database with Node.js, you need a MySQL driver. This tutorial will use the \"mysql\" module, downloaded from NPM. To download and install the \"mysql\" module, open the Command Terminal and execute the following:</p>\n              <p><b>C:\\Users\\Your Name&lt;npm install mysql</b></p>\n              <p>Now you have downloaded and installed a mysql database driver. Node.js can use this module to manipulate the MySQL database:</p>\n              <p><b>var mysql = require('mysql');</b></p>\n              <h2>Create Connection</h2>\n              <p>Start by creating a connection to the database. Use the username and password from your MySQL database.</p>\n              <img className = 'images3' src= {e1}/>\n              <h2>Query a Database</h2>\n              <p>Use SQL statements to read from (or write to) a MySQL database. This is also called \"to query\" the database. The connection object created in the example above, has a method for querying the database:</p>\n              <img className = 'images3' src= {e2}/>\n              <h2>Creating a Database</h2>\n              <p>To create a database in MySQL, use the \"CREATE DATABASE\" statement:</p>\n              <img className = 'images3' src= {e3}/>\n              <h2>Creating a Table</h2>\n              <img className = 'images3' src= {e4}/>\n              <p>When creating a table, you should also create a column with a unique key for each record. This can be done by defining a column as \"INT AUTO_INCREMENT PRIMARY KEY\" which will insert a unique number for each record. Starting at 1, and increased by one for each record.</p>\n              <img className = 'images3' src= {e5}/>\n              <h2>Insert Into Table</h2>\n              <p>To fill a table in MySQL, use the \"INSERT INTO\" statement.</p>\n              <img className = 'images3' src= {e6}/>\n              <p>To insert more than one record, make an array containing the values, and insert a question mark in the sql, which will be replaced by the value array: INSERT INTO customers (name, address) VALUES ?</p>\n              <h2>The Result Object</h2>\n              <p>When executing a query, a result object is returned. The result object contains information about how the query affected the table. The result object returned from the example above looks like this:</p>\n              <img className = 'images3' src= {e7}/>\n              <h2>Get Inserted ID</h2>\n              <p>For tables with an auto increment id field, you can get the id of the row you just inserted by asking the result object.</p>\n              <img className = 'images3' src= {e8}/>\n              <h2>Selecting From a Table</h2>\n              <p>To select data from a table in MySQL, use the \"SELECT\" statement.</p>\n              <img className = 'images3' src= {e9}/>\n              <p>To select only some of the columns in a table, use the \"SELECT\" statement followed by the column name. the result object is an array containing each row as an object. The third parameter of the callback function is an array containing information about each field in the result.</p>\n              <h2>Select With a Filter</h2>\n              <p>When selecting records from a table, you can filter the selection by using the \"WHERE\" statement:</p>\n              <img className = 'images3' src= {e10}/>\n              <p>You can also select the records that starts, includes, or ends with a given letter or phrase. Use the '%' wildcard to represent zero, one or multiple characters:</p>\n              <p><b>  con.query(\"SELECT * FROM customers WHERE address LIKE 'S%'\", function (err, result) )</b></p>\n              <p>When query values are variables provided by the user, you should escape the values. This is to prevent SQL injections, which is a common web hacking technique to destroy or misuse your database. The MySQL module has methods to escape query values:</p>\n              <p><b>var sql = 'SELECT * FROM customers WHERE address = ' + mysql.escape(adr);</b></p>\n              <p>You can also use a ? as a placeholder for the values you want to escape.</p>\n              <h2>Sort the Result</h2>\n              <p>Use the ORDER BY statement to sort the result in ascending or descending order. The ORDER BY keyword sorts the result ascending by default. To sort the result in descending order, use the DESC keyword.</p>\n              <img className = 'images3' src= {e11}/>\n              <p>Use the DESC keyword to sort the result in a descending order.</p>\n            </div>\n        </div>\n      <footer class=\"py-3 bg-dark fixed-bottom\">\n          <div class=\"container px-4 px-lg-5\"><p class=\"m-0 text-center text-white\">Copyright &copy; shay lavi 2023</p></div>\n      </footer>\n      <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\"></script>\n      <script src=\"js/scripts.js\"></script>\n  </body>\n  </div>\n  )\n}\n\nexport default MySql\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}